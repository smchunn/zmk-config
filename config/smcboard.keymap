/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define ALL -1
#define BASE 0
#define SYM  1
#define NAV  2
#define FN   3


&mt {
	flavor = "tap-preferred";
	tapping_term_ms = <230>;
};

/ { 


	behaviors {
		hm: homerow_mods {
			compatible = "zmk,behavior-hold-tap";
			label = "HOMEROW_MODS";
			#binding-cells = <2>;
			tapping-term-ms = <250>;
			quick_tap_ms = <0>;
			flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
		};
		td: tapdance {
			compatible = "zmk,behavior-hold-tap";
			label = "TAPDANCE";
			#binding-cells = <2>;
			tapping-term-ms = <150>;
			quick_tap_ms = <0>;
			flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
		};
		llt: layerlayertap {
			compatible = "zmk,behavior-hold-tap";
			label = "LAYERLAYERTAP";
			#binding-cells = <2>;
			tapping-term-ms = <150>;
			quick_tap_ms = <0>;
			flavor = "tap-preferred";
			retro-tap;
			bindings = <&mo>, <&to>;
		};
	};

  combos {
    compatible = "zmk,combos";
    combo_LGUI {
      timeout-ms = <50>;
      key-positions = <30 13>;
      bindings = <&kp LGUI>;
    };
    combo_LCTRL {
      timeout-ms = <50>;
      key-positions = <30 12>;
      bindings = <&kp LCTRL>;
    };
    combo_LALT {
      timeout-ms = <50>;
      key-positions = <30 11>;
      bindings = <&kp LALT>;
    };
    combo_LSHIFT {
      timeout-ms = <50>;
      key-positions = <30 10>;
      bindings = <&kp LSHIFT>;
    };
    combo_RGUI {
      timeout-ms = <50>;
      key-positions = <30 16>;
      bindings = <&kp RGUI>;
    };
    combo_RCTRL {
      timeout-ms = <50>;
      key-positions = <30 17>;
      bindings = <&kp RCTRL>;
    };
    combo_RALT {
      timeout-ms = <50>;
      key-positions = <30 18>;
      bindings = <&kp RALT>;
    };
    combo_RSHIFT {
      timeout-ms = <50>;
      key-positions = <30 19>;
      bindings = <&kp RSHIFT>;
    };
  };

	keymap {
	  compatible = "zmk,keymap";
				
		default_layer {
			bindings = <
  			&kp Q &kp W &kp F &kp P &kp B &kp J &kp L &kp U &kp Y &kp SEMI
				&kp A &kp R &kp S &kp T &kp G &kp M &kp N &kp E &kp I &kp O
				&kp Z &kp X &kp C &kp D &kp V &kp K &kp H &kp COMMA &kp DOT &kp SLASH
				&mt LC(LS(LALT)) SPC &kp LSHIFT &llt NAV BASE &mo SYM
			>;
		};

		symbol_layer {
			bindings = <
        &none &none &none &none &none &none &none &none &none &none
        &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp N0
        &none &none &none &kp TILDE &kp SQT &kp LBKT &kp RBKT &kp MINUS &kp EQUAL &kp BSLH 
        &trans &trans &trans &trans
        >;
		};
		
		nav_layer {
			bindings = <
				&kp ESC &none &none &none &none &none &kp ESC &kp TAB &kp DEL &kp BSPC
				&kp LSHFT &kp LALT &kp LCTRL &kp LGUI &none &kp LEFT &kp UP &kp DOWN &kp RIGHT &kp ENTER
				&to NAV &none &none &none &none &kp HOME &kp PG_UP &kp PG_DN &kp END &none
				&trans &trans &trans &none
			>;
		};
		
		function_layer {
			bindings = <
				&none &kp C_VOL_DN &kp C_VOL_UP &kp F11 &none &none &kp F12 &kp C_BRI_DN &kp C_BRI_UP &none
				&kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10
				&none &none &bt BT_PRV &bt BT_NXT &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &none &none
				&trans &trans &trans &trans
			>;
		};
		
	};
};

